<Page
	x:Class="Anilibria.Pages.OnlinePlayer.OnlinePlayerView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Anilibria.Pages.OnlinePlayer"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:converters="using:Anilibria.Converters"
	xmlns:controls="using:Anilibria.Controls"
	mc:Ignorable="d"
	d:DataContext="{d:DesignInstance local:OnlinePlayerViewModel}"
	x:Name="OnlinePlayerContainer">

	<Page.Resources>
		<converters:MediaSourceConverter x:Key="MediaSourceConverter" />
		<Storyboard x:Name="ShowPause">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="PauseIcon">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.3"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="PauseIcon">
				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.3"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PauseIcon">
				<EasingDoubleKeyFrame KeyTime="0" Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value=".8" />
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Storyboard x:Name="HidePause">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="PauseIcon">
				<EasingDoubleKeyFrame KeyTime="0" Value="1.3"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="PauseIcon">
				<EasingDoubleKeyFrame KeyTime="0" Value="1.3"/>
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PauseIcon">
				<EasingDoubleKeyFrame KeyTime="0" Value=".8" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<Style TargetType="Button" x:Key="VolumeButton">
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
			<Setter Property="BorderBrush" Value="{ThemeResource SystemControlForegroundTransparentBrush}" />
			<Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}" />
			<Setter Property="Padding" Value="0,0,0,0" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
			<Setter Property="FontWeight" Value="Normal" />
			<Setter Property="FontSize" Value="42" />
			<Setter Property="UseSystemFocusVisuals" Value="False" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal">
										<Storyboard>
											<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Gray" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="LightGray" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" />
											</ObjectAnimationUsingKeyFrames>
											<PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter x:Name="ContentPresenter"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Content="{TemplateBinding Content}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Padding="{TemplateBinding Padding}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								AutomationProperties.AccessibilityView="Raw"
							/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AnilibriaPlayerTransportControls" TargetType="MediaTransportControls">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="FlowDirection" Value="LeftToRight"/>
			<Setter Property="UseSystemFocusVisuals" Value="True"/>
			<Setter Property="IsTextScaleFactorEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MediaTransportControls">
						<Grid x:Name='RootGrid' Background='Transparent'>
							<Grid.Resources>

								<!--New AppBar button style 48x48 pixels in size-->
								<Style x:Key='AppBarButtonStyle' TargetType='AppBarButton'>
									<Setter Property='Width' Value='{ThemeResource MTCMediaButtonWidth}' />
									<Setter Property='Height' Value='{ThemeResource MTCMediaButtonHeight}' />
									<Setter Property='Background' Value='Transparent' />
									<Setter Property='Foreground' Value='Black' />
								</Style>

								<!--New CommandBar Style-->
								<Style x:Key='CommandBarStyle' TargetType='CommandBar'>
									<Setter Property='Height' Value='{ThemeResource MTCMediaButtonHeight}' />
									<Setter Property='Background' Value='Transparent' />
								</Style>

								<!--Style for Error Message text-->
								<Style x:Key='MediaTextBlockStyle' TargetType='TextBlock'>
									<Setter Property='VerticalAlignment' Value='Center' />
									<Setter Property='Foreground' Value="Black" />
									<Setter Property='FontSize' Value="{ThemeResource MTCMediaFontSize}" />
									<Setter Property='FontFamily' Value="{ThemeResource MTCMediaFontFamily}" />
									<Setter Property="IsTextScaleFactorEnabled" Value="False"/>
								</Style>


								<!--Style for Position slider used in Media Transport Controls-->
								<Style x:Key='MediaSliderStyle' TargetType='Slider'>
									<Setter Property="Background" Value="{ThemeResource SystemControlForegroundBaseMediumLowBrush}" />
									<Setter Property="BorderThickness" Value="{ThemeResource SliderBorderThemeThickness}" />
									<Setter Property="Foreground" Value="{ThemeResource SystemControlHighlightAccentBrush}" />
									<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
									<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
									<Setter Property='ManipulationMode' Value='None' />
									<Setter Property="UseSystemFocusVisuals" Value="True" />
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="Slider">
												<Grid Margin="{TemplateBinding Padding}">
													<Grid.Resources>
														<Style TargetType="Thumb" x:Key="SliderThumbStyle">
															<Setter Property="BorderThickness" Value="0" />
															<Setter Property="Background" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
															<Setter Property="Foreground" Value="{ThemeResource SystemControlBackgroundChromeMediumBrush}" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="Thumb">
																		<Ellipse x:Name='ellipse'
																			Stroke='{TemplateBinding Background}'
																			StrokeThickness='2'
																			Fill='{TemplateBinding Foreground}'/>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
														<Style TargetType='ProgressBar' x:Key='MediaSliderProgressBarStyle'>
															<Setter Property='Height' Value='{ThemeResource SliderTrackThemeHeight}' />
															<Setter Property='Minimum' Value='0' />
															<Setter Property='Maximum' Value='100' />
															<Setter Property='Foreground' Value='{ThemeResource SystemControlHighlightChromeAltLowBrush}' />
															<Setter Property='Background' Value='Transparent' />
															<Setter Property='BorderBrush' Value='Transparent' />
															<Setter Property='BorderThickness' Value='1' />
														</Style>
													</Grid.Resources>
													<Grid.RowDefinitions>
														<RowDefinition Height="Auto" />
														<RowDefinition Height="*" />
													</Grid.RowDefinitions>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Normal" />
															<VisualState x:Name="Pressed">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																		Storyboard.TargetProperty="Background">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																		Storyboard.TargetProperty="Background">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																		Storyboard.TargetProperty="Foreground">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																		Storyboard.TargetProperty="Foreground">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
																		Storyboard.TargetProperty="Foreground">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalDecreaseRect"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalDecreaseRect"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																		Storyboard.TargetProperty="Background">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																		Storyboard.TargetProperty="Background">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledChromeDisabledHighBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftTickBar"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RightTickBar"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="PointerOver">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalTrackRect"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalTrackRect"
																		Storyboard.TargetProperty="Fill">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlForegroundBaseMediumBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalThumb"
																		Storyboard.TargetProperty="Background">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalThumb"
																		Storyboard.TargetProperty="Background">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightChromeAltLowBrush}" />
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<ContentPresenter x:Name="HeaderContentPresenter"
														x:DeferLoadStrategy="Lazy"
														Visibility="Collapsed"
														Foreground="{ThemeResource SystemControlForegroundBaseHighBrush}"
														Margin="{ThemeResource SliderHeaderThemeMargin}"
														Content="{TemplateBinding Header}"
														ContentTemplate="{TemplateBinding HeaderTemplate}"
														FontWeight="{ThemeResource SliderHeaderThemeFontWeight}" />
													<Grid x:Name="SliderContainer" Background="Transparent" Grid.Row="1" Control.IsTemplateFocusTarget="True">
														<Grid x:Name="HorizontalTemplate" MinHeight="44">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<Grid.RowDefinitions>
																<RowDefinition Height="18" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="18" />
															</Grid.RowDefinitions>
															<Rectangle x:Name="HorizontalTrackRect"
																Fill="{TemplateBinding Background}"
																Height="{ThemeResource SliderTrackThemeHeight}"
																Grid.Row="1"
																Grid.ColumnSpan="3" />
															<ProgressBar x:Name='DownloadProgressIndicator'
																Style='{StaticResource MediaSliderProgressBarStyle}'
																Grid.Row='1'
																Grid.ColumnSpan='3'
																HorizontalAlignment='Stretch'
																VerticalAlignment='Center'/>
															<Rectangle x:Name="HorizontalDecreaseRect"
																Fill="{TemplateBinding Foreground}"
																Grid.Row="1" />
															<TickBar x:Name="TopTickBar"
																Visibility="Collapsed"
																Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
																Height="{ThemeResource SliderOutsideTickBarThemeHeight}"
																VerticalAlignment="Bottom"
																Margin="0,0,0,4"
																Grid.ColumnSpan="3" />
															<TickBar x:Name="HorizontalInlineTickBar"
																Visibility="Collapsed"
																Fill="{ThemeResource SystemControlBackgroundAltHighBrush}"
																Height="{ThemeResource SliderTrackThemeHeight}"
																Grid.Row="1"
																Grid.ColumnSpan="3" />
															<TickBar x:Name="BottomTickBar"
																Visibility="Collapsed"
																Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
																Height="{ThemeResource SliderOutsideTickBarThemeHeight}"
																VerticalAlignment="Top"
																Margin="0,4,0,0"
																Grid.Row="2"
																Grid.ColumnSpan="3" />
															<Thumb x:Name="HorizontalThumb"
																Background="{ThemeResource SystemControlForegroundAccentBrush}"
																Style="{StaticResource SliderThumbStyle}"
																DataContext="{TemplateBinding Value}"
																Height="24"
																Width="24"
																Grid.Row="0"
																Grid.RowSpan="3"
																Grid.Column="1"
																AutomationProperties.AccessibilityView="Raw" />
														</Grid>

														<Grid x:Name="VerticalTemplate" MinWidth="44" Visibility="Collapsed">
															<Grid.RowDefinitions>
																<RowDefinition Height="*" />
																<RowDefinition Height="Auto" />
																<RowDefinition Height="Auto" />
															</Grid.RowDefinitions>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="18" />
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition Width="18" />
															</Grid.ColumnDefinitions>
															<Rectangle x:Name="VerticalTrackRect"
																Fill="{TemplateBinding Background}"
																Width="{ThemeResource SliderTrackThemeHeight}"
																Grid.Column="1"
																Grid.RowSpan="3" />
															<Rectangle x:Name="VerticalDecreaseRect"
																Fill="{TemplateBinding Foreground}"
																Grid.Column="1"
																Grid.Row="2" />
															<TickBar x:Name="LeftTickBar"
																Visibility="Collapsed"
																Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
																Width="{ThemeResource SliderOutsideTickBarThemeHeight}"
																HorizontalAlignment="Right"
																Margin="0,0,4,0"
																Grid.RowSpan="3" />
															<TickBar x:Name="VerticalInlineTickBar"
																Visibility="Collapsed"
																Fill="{ThemeResource SystemControlBackgroundAltHighBrush}"
																Width="{ThemeResource SliderTrackThemeHeight}"
																Grid.Column="1"
																Grid.RowSpan="3" />
															<TickBar x:Name="RightTickBar"
																Visibility="Collapsed"
																Fill="{ThemeResource SystemControlForegroundBaseMediumLowBrush}"
																Width="{ThemeResource SliderOutsideTickBarThemeHeight}"
																HorizontalAlignment="Left"
																Margin="4,0,0,0"
																Grid.Column="2"
																Grid.RowSpan="3" />
															<Thumb x:Name="VerticalThumb"
																Background="{ThemeResource SystemControlForegroundAccentBrush}"
																Style="{StaticResource SliderThumbStyle}"
																DataContext="{TemplateBinding Value}"
																Width="8"
																Height="24"
																Grid.Row="1"
																Grid.Column="0"
																Grid.ColumnSpan="3"
																AutomationProperties.AccessibilityView="Raw"/>
														</Grid>
													</Grid>
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>

								<!--Style for Volume Flyout used in Media Transport Controls-->
								<Style x:Key='FlyoutStyle' TargetType='FlyoutPresenter'>
									<Setter Property='Background' Value='{ThemeResource SystemControlBackgroundChromeMediumBrush}' />
									<Setter Property="Padding" Value="0"/>
								</Style>
							</Grid.Resources>

							<VisualStateManager.VisualStateGroups>

								<!-- ControlPanel Visibility states -->
								<VisualStateGroup x:Name='ControlPanelVisibilityStates'>
									<VisualState x:Name='ControlPanelFadeIn'>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='ControlPanel_ControlPanelVisibilityStates_Border'>
												<EasingDoubleKeyFrame KeyTime='0' Value='0' />
												<EasingDoubleKeyFrame KeyTime='0:0:0.3' Value='1' />
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name='ControlPanelFadeOut'>
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty='Opacity' Storyboard.TargetName='ControlPanel_ControlPanelVisibilityStates_Border'>
												<EasingDoubleKeyFrame KeyTime='0' Value='1' />
												<EasingDoubleKeyFrame KeyTime='0:0:0.7' Value='0' />
											</DoubleAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='IsHitTestVisible' Storyboard.TargetName='ControlPanel_ControlPanelVisibilityStates_Border'>
												<DiscreteObjectKeyFrame KeyTime='0' Value='False'/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<!-- ControlPanel Visibility states -->

								<!-- Media state visual states -->
								<VisualStateGroup x:Name='MediaStates'>
									<VisualState x:Name='Normal' />
									<VisualState x:Name='Buffering'>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='BufferingProgressBar'>
												<DiscreteObjectKeyFrame KeyTime='0'>
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name='Loading'>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='BufferingProgressBar'>
												<DiscreteObjectKeyFrame KeyTime='0'>
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation Storyboard.TargetName='ProgressSlider'
												Storyboard.TargetProperty='Opacity'
												To='0'
												Duration='0' />
											<DoubleAnimation Storyboard.TargetName='MediaControlsCommandBar'
												Storyboard.TargetProperty='Opacity'
												To='0'
												Duration='0' />
										</Storyboard>
									</VisualState>
									<VisualState x:Name='Error'>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='ErrorBorder'>
												<DiscreteObjectKeyFrame KeyTime='0'>
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name='Disabled'>
										<Storyboard>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<!-- Media state visual states -->

								<!-- Audio Selection Button visibility states -->
								<VisualStateGroup x:Name='AudioSelectionAvailablityStates'>
									<VisualState x:Name='AudioSelectionAvailable'>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='AudioTracksSelectionButton'>
												<DiscreteObjectKeyFrame KeyTime='0'>
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name='AudioSelectionUnavailable' />
								</VisualStateGroup>
								<!-- Video volume visibility states -->

								<!-- Closed Captioning Selection Button visibility states -->
								<VisualStateGroup x:Name='CCSelectionAvailablityStates'>
									<VisualState x:Name='CCSelectionAvailable'>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty='Visibility' Storyboard.TargetName='CCSelectionButton'>
												<DiscreteObjectKeyFrame KeyTime='0'>
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name='CCSelectionUnavailable' />
								</VisualStateGroup>
								<!-- Closed Captioning  visibility states -->

								<!-- Focus states -->
								<VisualStateGroup x:Name='FocusStates'>
									<VisualState x:Name='Focused'>
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName='FocusVisualWhite'
												Storyboard.TargetProperty='Opacity'
												To='1'
												Duration='0' />
											<DoubleAnimation Storyboard.TargetName='FocusVisualBlack'
												Storyboard.TargetProperty='Opacity'
												To='1'
												Duration='0' />
										</Storyboard>
									</VisualState>
									<VisualState x:Name='Unfocused' />
									<VisualState x:Name='PointerFocused' />
								</VisualStateGroup>
								<!-- Focus states -->
								<VisualStateGroup x:Name="MediaTransportControlMode">
									<VisualState x:Name="NormalMode" />
									<VisualState x:Name="CompactMode">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="LeftSidePlayBorder" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TimeTextGrid" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediaTransportControls_Command_Border" Storyboard.TargetProperty="(Grid.Column)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="2" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediaTransportControls_Command_Border" Storyboard.TargetProperty="(Grid.Row)">
												<DiscreteObjectKeyFrame KeyTime="0" Value="1" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MediaControlsCommandBar" Storyboard.TargetProperty="Margin">
												<DiscreteObjectKeyFrame KeyTime="0" Value="0" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayPauseButton" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime='0'>
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Collapsed</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>

								<!-- PlayPause states -->
								<VisualStateGroup x:Name="PlayPauseStates">
									<VisualState x:Name="PlayState" />
									<VisualState x:Name="PauseState">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayPauseSymbolLeft" Storyboard.TargetProperty="Symbol">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Pause"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayPauseSymbol" Storyboard.TargetProperty="Symbol" >
												<DiscreteObjectKeyFrame KeyTime="0" Value="Pause"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<!-- VolumeMute states -->
								<VisualStateGroup x:Name="VolumeMuteStates">
									<VisualState x:Name="VolumeState" />
									<VisualState x:Name="MuteState">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="AudioMuteSymbol" Storyboard.TargetProperty="Symbol">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Mute"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="VolumeMuteSymbol" Storyboard.TargetProperty="Symbol">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Mute"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<!-- FullWindow states -->
								<VisualStateGroup x:Name="FullWindowStates">
									<VisualState x:Name="NonFullWindowState" />
									<VisualState x:Name="FullWindowState">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="FullWindowSymbol" Storyboard.TargetProperty="Symbol">
												<DiscreteObjectKeyFrame KeyTime="0" Value="BackToWindow"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>

							<Border x:Name='ControlPanel_ControlPanelVisibilityStates_Border' Loaded="ControlPanel_ControlPanelVisibilityStates_Border_Loaded">
								<Grid x:Name='ControlPanelGrid'
									Background="Transparent"
									VerticalAlignment='Bottom'
									RenderTransformOrigin='0.5,0.5'
									PointerEntered="RootGrid_PointerEntered" PointerExited="RootGrid_PointerExited">
									<Grid.RenderTransform>
										<TranslateTransform />
									</Grid.RenderTransform>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width='Auto' />
										<ColumnDefinition Width='*' />
										<ColumnDefinition Width='Auto' />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height='Auto' />
										<RowDefinition Height='*' />
										<RowDefinition Height='Auto'/>
									</Grid.RowDefinitions>
									<Rectangle
										Grid.ColumnSpan="3"
										Grid.RowSpan="3"
										converters:BackgroundThemeConverter.BackgroundMapper="ReleaseCardBackground"
										Opacity="{Binding ControlPanelOpacity}"
									/>
									<Border x:Name="ErrorBorder" Width='320' Height='96'
										Grid.ColumnSpan='3'
										HorizontalAlignment="Center"
										converters:BackgroundThemeConverter.BackgroundMapper="ReleaseCardBackground"
										Visibility='Collapsed'>
										<TextBlock x:Name='ErrorTextBlock'
											converters:BackgroundThemeConverter.TextMapper="TextBlock"
											FontSize="12"
											TextWrapping="WrapWholeWords"
											Margin='12'/>
									</Border>
									<Border x:Name='MediaTransportControls_Timeline_Border'
										Grid.Column='1'
										Grid.Row='1'>
										<Grid x:Name='MediaTransportControls_Timeline_Grid' >
											<Grid.ColumnDefinitions>
												<ColumnDefinition />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition />
												<RowDefinition Height='Auto' />
											</Grid.RowDefinitions>
											<Slider x:Name='ProgressSlider'
												converters:BackgroundThemeConverter.Slider="Origin"
												Margin='12,0'
												MinWidth='80'
												Height='33'
												VerticalAlignment='Center'
												IsTabStop="False"
												IsThumbToolTipEnabled='False'/>
											<ProgressBar
												x:Name='BufferingProgressBar'
												Style="{StaticResource AnilibriaProgressBarStyle}"
												Height='4'
												IsIndeterminate="True"
												IsHitTestVisible='False'
												VerticalAlignment='Top'
												Margin='0,2,0,0'
												Visibility='Collapsed'/>
											<Grid x:Name="TimeTextGrid"
												Margin="12 0 12 4"
												Grid.Row="1"
												Height="20">
												<StackPanel Orientation="Horizontal">
													<TextBlock x:Name='TimeElapsedElement'
														converters:BackgroundThemeConverter.TextMapper="TextBlock"
														FontSize="12"
														Margin="0"
														Text="00:00"
														HorizontalAlignment='Left'
														Visibility="Collapsed"/>
													<TextBlock
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														converters:BackgroundThemeConverter.TextMapper="TextBlock"
														FontSize="12"
														Margin="6 0 0 0"
														HorizontalAlignment='Left'>
														<Run
															Text="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.DisplayPositionPercent}"
														/>
														<Run
															Text="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.DisplayPosition}"
														/>
														<Run>
															/
														</Run>
														<Run
															Text="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.DisplayDuration}"
														/>
													</TextBlock>
													<TextBlock
														converters:BackgroundThemeConverter.TextMapper="TextBlock"
														FontSize="12"
														Margin="6 0 0 0"
														HorizontalAlignment='Left'>
													</TextBlock>
												</StackPanel>
												<StackPanel
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsMediaOpened}"
													Orientation="Horizontal"
													HorizontalAlignment="Center">
													<ToggleButton
														IsTabStop="False"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsExistsFullHD}"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsFullHD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														1080p
													</ToggleButton>
													<ToggleButton
														IsTabStop="False"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsHD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														720p
													</ToggleButton>
													<ToggleButton
														IsTabStop="False"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsSD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														480p
													</ToggleButton>
													<TextBlock
														x:Name="SpeedText"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														Margin="10 0 10 0">
														|
													</TextBlock>
													<ToggleButton
														Margin="0 0 0 0"
														IsTabStop="False"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is025xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x0.25
													</ToggleButton>
													<ToggleButton
														Margin="0 0 0 0"
														IsTabStop="False"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is05xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x0.5
													</ToggleButton>
													<ToggleButton
														Margin="0 0 0 0"
														IsTabStop="False"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is075xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x0.75
													</ToggleButton>
													<ToggleButton
														Margin="0 0 0 0"
														IsTabStop="False"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsNormalSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x1
													</ToggleButton>
													<ToggleButton
														Margin="0 0 0 0"
														IsTabStop="False"
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is125xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x1.25
													</ToggleButton>
													<ToggleButton
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														IsTabStop="False"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is15xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x1.5
													</ToggleButton>
													<ToggleButton
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														IsTabStop="False"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is175xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x1.75
													</ToggleButton>
													<ToggleButton
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														IsTabStop="False"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is2xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x2
													</ToggleButton>
													<ToggleButton
														Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
														IsTabStop="False"
														converters:BackgroundThemeConverter.ToggleButton="Origin"
														Height="40"
														FontSize="{ThemeResource MTCMediaFontSize}"
														IsChecked="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Is3xSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
														x3
													</ToggleButton>
												</StackPanel>
												<TextBlock x:Name='TimeRemainingElement'
													converters:BackgroundThemeConverter.TextMapper="TextBlock"
													FontSize="12"
													Text="00:00"
													HorizontalAlignment='Right'/>
											</Grid>
										</Grid>
									</Border>
									<Border x:Name='LeftSidePlayBorder'
										Grid.Column='0'
										Grid.Row='1'
										Visibility='Collapsed'>
										<AppBarButton x:Name='PlayPauseButtonOnLeft'
											Margin='0' VerticalAlignment='Center'
											Style='{StaticResource AppBarButtonStyle}'>
											<AppBarButton.Icon>
												<SymbolIcon x:Name='PlayPauseSymbolLeft' Symbol='Play' />
											</AppBarButton.Icon>
										</AppBarButton>
									</Border>
									<Border x:Name='MediaTransportControls_Command_Border'
										Grid.Column='1'
										Grid.Row='2'>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="Auto" />
												<ColumnDefinition />
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>
											<StackPanel
												Orientation="Horizontal"
												Margin="0 0 0 5">
												<Button
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
													VerticalAlignment="Top"
													ToolTipService.ToolTip="Открыть меню"
													Width="50"
													IsTabStop="False"
													converters:BackgroundThemeConverter.PlayerButton="Origin"
													Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.ShowSidebarCommand}">
													<FontIcon Glyph="&#xE700;" />
												</Button>
												<Button x:Name='VolumeMuteButton'
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin"
													VerticalAlignment="Top">
													<Button.Flyout>
														<Flyout x:Name='VolumeFlyout'>
															<Flyout.FlyoutPresenterStyle>
																<Style TargetType="FlyoutPresenter">
																	<Setter Property="Padding" Value="0" />
																	<Setter Property="Margin" Value="0" />
																</Style>
															</Flyout.FlyoutPresenterStyle>
															<StackPanel
																converters:BackgroundThemeConverter.BackgroundMapper="ReleaseCardBackground"
																Orientation="Horizontal"
																Padding="4">
																<Button x:Name='AudioMuteButton'
																		converters:BackgroundThemeConverter.PlayerButton="Origin"
																		VerticalAlignment='Center'
																		HorizontalAlignment='Center'
																		Margin='12'
																		Height="40"
																		Width="50">
																	<SymbolIcon x:Name='AudioMuteSymbol' Symbol='Volume' />
																</Button>
																<Slider x:Name='VolumeSlider'
																	Value='50'
																	converters:BackgroundThemeConverter.Slider="Origin"
																	IsThumbToolTipEnabled='False'
																	Width='{ThemeResource MTCHorizontalVolumeSliderWidth}'
																	VerticalAlignment='Center'
																	HorizontalAlignment='Center'
																	Margin='0'
																/>
																<TextBlock
																	x:Name='VolumeValue'
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	Text="{Binding ElementName=VolumeSlider,Path=Value}"
																	HorizontalAlignment='Center'
																	VerticalAlignment='Center'
																	Width='24'
																	Margin='12'
																/>
															</StackPanel>
														</Flyout>
													</Button.Flyout>
													<SymbolIcon x:Name='VolumeMuteSymbol' Symbol='Volume' />
												</Button>
												<Button
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
													ToolTipService.ToolTip="Настройки"
													converters:BackgroundThemeConverter.PlayerButton="Origin"
													Width="50"
													IsTabStop="False"
													VerticalAlignment="Top">
													<Button.Flyout>
														<Flyout
															converters:BackgroundThemeConverter.CommonFlyout="Origin"
															controls:FlyoutHelper.IsOpen="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsVideosFlyoutVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
															controls:FlyoutHelper.IsOnlyHide="True">
															<StackPanel
																Padding="10">
																<TextBlock
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	FontSize="14">
																	Автопереход между сериями
																</TextBlock>
																<ToggleSwitch
																	converters:BackgroundThemeConverter.ToggleSwitch="Origin"
																	IsTabStop="False"
																	Margin="0 4 0 0"
																	OnContent="Включен"
																	OffContent="Выключен"
																	FontSize="12"
																	IsOn="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsAutoTransition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
																</ToggleSwitch>
																<TextBlock
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	FontSize="14">
																	Информация о релизе
																</TextBlock>
																<ToggleSwitch
																	converters:BackgroundThemeConverter.ToggleSwitch="Origin"
																	IsTabStop="False"
																	Margin="0 4 0 0"
																	OnContent="Показывается"
																	OffContent="Скрывается"
																	FontSize="12"
																	IsOn="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsNeedShowReleaseInfo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
																</ToggleSwitch>
																<TextBlock
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	FontSize="14">
																	Прозрачность панели
																</TextBlock>
																
																<Slider x:Name='ControlPanelOpacitySlider'
																	converters:BackgroundThemeConverter.Slider="Origin"
																	Width='{ThemeResource MTCHorizontalVolumeSliderWidth}'
																	IsThumbToolTipEnabled="False"
																	Margin="0"
																	Minimum="0"
																	StepFrequency=".1"
																	Maximum="1"
																	Value="{Binding ControlPanelOpacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																/>
																<TextBlock
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	FontSize="14"
																	Margin="0 -10 0 0">
																	Кнопка открытия плейлиста
																</TextBlock>
																<ComboBox
																	DataContext="{Binding ElementName=OnlinePlayerContainer, Path=DataContext}"
																	converters:BackgroundThemeConverter.AnilibriaComboBox="Origin"
																	SelectedItem="{Binding SelectedPlaylistButtonPosition, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																	ItemsSource="{Binding PlaylistButtonPositions}"
																	DisplayMemberPath="Title"
																	Width="120"
																	Margin="0 2 0 10"
																	DataContextChanged="ComboBox_DataContextChanged"
																/>
																<TextBlock
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	FontSize="14">
																	Время прыжка
																</TextBlock>
																<Grid>
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition />
																		<ColumnDefinition />
																	</Grid.ColumnDefinitions>
																	<ComboBox
																		x:Name="MinutesComboBox"
																		HorizontalAlignment="Center"
																		Grid.Column="0"
																		Margin="0 0 0 8"
																		converters:BackgroundThemeConverter.AnilibriaComboBox="Origin"
																		SelectedItem="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.SelectedMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																		ItemsSource="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Minutes}"
																		DisplayMemberPath="Title"
																		DataContextChanged="MinutesComboBox_DataContextChanged"
																	/>
																	<ComboBox
																		x:Name="SecondsComboBox"
																		HorizontalAlignment="Center"
																		Grid.Column="1"
																		Margin="0 0 0 8"
																		converters:BackgroundThemeConverter.AnilibriaComboBox="Origin"
																		SelectedItem="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.SelectedSecond, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
																		ItemsSource="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.Seconds}"
																		DisplayMemberPath="Title"
																		DataContextChanged="SecondsComboBox_DataContextChanged"
																	/>
																</Grid>
																<TextBlock
																	converters:BackgroundThemeConverter.TextMapper="TextBlock"
																	FontSize="14"
																	Margin="0 -10 0 0"
																	Visibility="{Binding IsSupportedCompactOverlay}">
																	Компактный режим
																</TextBlock>
																<Button
																	Margin="0 4 0 4"
																	Visibility="{Binding IsSupportedCompactOverlay}"
																	HorizontalAlignment="Left"
																	converters:BackgroundThemeConverter.ActionButton="Origin"
																	Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.EnableCompactModeCommand}">
																	Включить
																</Button>
															</StackPanel>
														</Flyout>
													</Button.Flyout>
													<FontIcon Glyph="&#xE713;" />
												</Button>
											</StackPanel>
											<StackPanel
												Grid.Column="1"
												HorizontalAlignment="Center"
												Orientation="Horizontal"
												Margin="0 0 0 16">
												<Button
													Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.PreviousTrackCommand}"
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xE100;"/>
												</Button>

												<Button
													x:Name='SkipBackwardButton'
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xED3C;"/>
												</Button>

												<Button
													x:Name='RewindButton'
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xEB9E;"/>
												</Button>

												<Button
													x:Name='PlayPauseButton'
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<SymbolIcon x:Name='PlayPauseSymbol' Symbol='Play' />
												</Button>

												<Button
													x:Name='FastForwardButton'
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xEB9D;"/>
												</Button>
												<Button
													x:Name='SkipForwardButton'
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xED3D;"/>
												</Button>

												<Button
													Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.NextTrackCommand}"
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xE101;"/>
												</Button>
											</StackPanel>
											<CommandBar
												x:Name="MediaControlsCommandBar"
												Grid.Column="1"
												Margin='0 0 0 5'
												Style='{StaticResource CommandBarStyle}'
												HorizontalAlignment="Center"
												Visibility="Collapsed">
												<CommandBar.PrimaryCommands>
													<AppBarButton x:Name='AudioTracksSelectionButton'
														Icon='Character'
														Style='{StaticResource AppBarButtonStyle}'
														MediaTransportControlsHelper.DropoutOrder='5'
														Visibility='Collapsed'/>
													<AppBarButton x:Name='StopButton'
														Icon='Stop'
														Style='{StaticResource AppBarButtonStyle}'
														MediaTransportControlsHelper.DropoutOrder='1'
														Visibility='Collapsed'/>
													<AppBarButton x:Name='CCSelectionButton'
														Style='{StaticResource AppBarButtonStyle}'
														MediaTransportControlsHelper.DropoutOrder='9'
														Visibility='Collapsed'>
														<AppBarButton.Icon>
															<FontIcon Glyph="&#xE7F0;"/>
														</AppBarButton.Icon>
													</AppBarButton>
													<AppBarButton x:Name='PlaybackRateButton'
														Style='{StaticResource OnlinePlayerAppButton}'
														MediaTransportControlsHelper.DropoutOrder='4'
														Visibility='Collapsed'>
														<AppBarButton.Icon>
															<FontIcon Glyph="&#xEC57;"/>
														</AppBarButton.Icon>
													</AppBarButton>
												</CommandBar.PrimaryCommands>
											</CommandBar>
											<StackPanel
												Grid.Column="2"
												Orientation="Horizontal"
												Margin="0 0 0 5"
												Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsXbox, Converter={StaticResource InverseBoolConverter}}">
												<Button
													x:Name='CastButton'
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xEC15;"/>
												</Button>
												<Button
													x:Name='ZoomButton'
													Width="50"
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
													IsTabStop="False"
													converters:BackgroundThemeConverter.PlayerButton="Origin">
													<FontIcon Glyph="&#xE799;"/>
												</Button>
												<Button
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}"
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin"
													Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.ToggleFullScreenCommand}">
													<SymbolIcon Symbol='FullScreen' />
												</Button>
												<Button
													Visibility="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.IsCompactOverlayEnabled}"
													IsTabStop="False"
													Width="50"
													converters:BackgroundThemeConverter.PlayerButton="Origin"
													Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.LeaveCompactModeCommand}"
													ToolTipService.ToolTip="Выйти из режима картинка в картинке">
													<FontIcon Glyph="&#xE746;"/>
												</Button>
												<AppBarButton x:Name='FullWindowButton'
													IsTabStop="False"
													Style='{StaticResource AppBarButtonStyle}'
													MediaTransportControlsHelper.DropoutOrder='8'>
													<AppBarButton.Icon>
														<SymbolIcon x:Name='FullWindowSymbol' Symbol='FullScreen' />
													</AppBarButton.Icon>
												</AppBarButton>
											</StackPanel>
										</Grid>
									</Border>
								</Grid>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="SeriesListViewItemTemplate">
			<Grid
				HorizontalAlignment="Stretch"
				VerticalAlignment="Stretch"
				Width="145"
				Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock
					Grid.Column="0"
					converters:BackgroundThemeConverter.TextMapper="TextBlock"
					VerticalAlignment="Center"
					Text="{Binding Title}"
				/>
				<Button
					Style="{StaticResource IconsButtonStyle}"
					Command="{Binding ElementName=OnlinePlayerContainer, Path=DataContext.ToggleSeenMarkCommand}"
					CommandParameter="{Binding}"
					HorizontalAlignment="Right"
					Grid.Column="1">
					<Grid
						Height="24">
						<controls:EyeIcon
							Visibility="{Binding IsSeen}"
							IconWidth="20"
							IconHeight="20"
							converters:BackgroundThemeConverter.BackgroundMapper="TextBlock"
							IconStrokeThickness="4"
						/>
						<controls:EyeIcon
							Visibility="{Binding IsSeen, Converter={StaticResource InverseBoolConverter}}"
							IconWidth="20"
							IconHeight="20"
							converters:BackgroundThemeConverter.BackgroundMapper="TextBlock"
							IconStrokeThickness="0"
						/>
					</Grid>
				</Button>
			</Grid>
		</DataTemplate>

		<CollectionViewSource
			x:Name="GroupedSeriesSource"
			Source="{Binding GroupingOnlineVideos}"
			IsSourceGrouped="true"
		/>

	</Page.Resources>

	<Grid PointerMoved="Grid_PointerMoved">
		<Grid
			Background="Black">
			<MediaPlayerElement
				x:Name="OnlinePlayer"
				Source="{Binding VideoSource, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource MediaSourceConverter}}"
				AutoPlay="True"
				AreTransportControlsEnabled="True"
				DoubleTapped="OnlinePlayer_DoubleTapped"
				Tapped="OnlinePlayer_Tapped">
				<MediaPlayerElement.TransportControls>
					<MediaTransportControls Style="{StaticResource AnilibriaPlayerTransportControls}"/>
				</MediaPlayerElement.TransportControls>
			</MediaPlayerElement>
		</Grid>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height=".8*" />
				<RowDefinition Height=".2*" />
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid
				x:Name="PlaylistGrid"
				Grid.Row="0"
				Grid.Column="0"
				VerticalAlignment="Stretch"
				Background="Transparent">
				<Rectangle
					IsHitTestVisible="False"
					Fill="White"
					Opacity=".8"
					converters:BackgroundThemeConverter.BackgroundMapper="ReleaseCardBackground"
					Visibility="{Binding ShowPlaylistButton, Converter={StaticResource InverseBoolConverter}}">
				</Rectangle>
				<Grid
					Visibility="{Binding IsCinemaHall, Converter={StaticResource InverseBoolConverter}}">
					<ListView
						x:Name="PlaylistListView"
						PointerEntered="PlaylistListView_PointerEntered"
						PointerExited="PlaylistListView_PointerExited"
						converters:BackgroundThemeConverter.AnilibriaListViewStyle="Origin"
						MinWidth="170"
						Width="170"
						MaxWidth="190"
						HorizontalAlignment="Left"
						ItemsSource="{Binding OnlineVideos}"
						SelectedItem="{Binding SelectedOnlineVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						Visibility="{Binding ShowPlaylistButton, Converter={StaticResource InverseBoolConverter}}"
						ItemTemplate="{StaticResource SeriesListViewItemTemplate}">
					</ListView>
				</Grid>
				<Grid
					Visibility="{Binding IsCinemaHall}">
					<ListView
						x:Name="GroupedPlaylistListView"
						PointerEntered="PlaylistListView_PointerEntered"
						PointerExited="PlaylistListView_PointerExited"
						converters:BackgroundThemeConverter.AnilibriaListViewStyle="Origin"
						MinWidth="260"
						Width="260"
						MaxWidth="260"
						HorizontalAlignment="Left"
						ItemsSource="{Binding Source={StaticResource GroupedSeriesSource}}"
						SelectedItem="{Binding SelectedOnlineVideo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						Visibility="{Binding ShowPlaylistButton, Converter={StaticResource InverseBoolConverter}}"
						ItemTemplate="{StaticResource SeriesListViewItemTemplate}">
						<ListView.GroupStyle>
							<GroupStyle>
								<GroupStyle.HeaderTemplate>
									<DataTemplate>
										<TextBlock
											Text="{Binding Key}"
											converters:BackgroundThemeConverter.TextMapper="TextBlockAccent"
											FontSize="15"
											Margin="2"
											TextTrimming="CharacterEllipsis"
											MaxLines="4"
											TextWrapping="WrapWholeWords"
										/>
									</DataTemplate>
								</GroupStyle.HeaderTemplate>
							</GroupStyle>
						</ListView.GroupStyle>
					</ListView>
				</Grid>
				<Grid Visibility="{Binding IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}">
					<Button
						x:Name="OpenPlaylistButton"
						converters:BackgroundThemeConverter.ActionButton="Origin"
						VerticalAlignment="Center"
						Command="{Binding ShowPlaylistCommand}"
						Visibility="{Binding ShowPlaylistButton}"
						Padding="18 8 18 8"
						BorderThickness="0">
						<FontIcon Glyph="&#xEE40;" />
					</Button>
				</Grid>
			</Grid>
			<Grid
				Grid.Row="0"
				Grid.Column="2"
				Visibility="{Binding IsCompactOverlayEnabled, Converter={StaticResource InverseBoolConverter}}">
				<Grid
					Visibility="{Binding IsNeedShowReleaseInfo}">
					<StackPanel
						x:Name="CurrentReleaseInfo"
						Visibility="{Binding IsShowReleaseInfo, UpdateSourceTrigger=PropertyChanged}"
						Background="Transparent">
						<Border
							converters:BackgroundThemeConverter.BorderMapper="AccentBorderColor"
							BorderThickness="2"
							HorizontalAlignment="Right"
							CornerRadius="8">
							<Grid
								CornerRadius="8"
								converters:BackgroundThemeConverter.BackgroundMapper="ReleaseCardBackground">
								<StackPanel Margin="2 0 2 0" Orientation="Horizontal">
									<Grid>
										<Grid.RowDefinitions>
											<RowDefinition />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<StackPanel
										Grid.Row="0"
										Orientation="Vertical"
										MaxWidth="200">
											<TextBlock
												
												x:Name="CurrentReleaseTitle"
												FontSize="20"
												converters:BackgroundThemeConverter.TextMapper="TextBlockAccent"
												HorizontalAlignment="Right"
												TextWrapping="WrapWholeWords"
												TextTrimming="CharacterEllipsis"
												TextAlignment="Right"
												MaxLines="5"
												Text="{Binding SelectedRelease.Title}"
											/>
											<TextBlock
												x:Name="CurrentVideoTitle"
												FontSize="20"
												converters:BackgroundThemeConverter.TextMapper="TextBlock"
												TextTrimming="CharacterEllipsis"
												HorizontalAlignment="Right"
												Text="{Binding SelectedOnlineVideo.Title}"
											/>
										</StackPanel>
										<StackPanel
											Grid.Row="1"
											Orientation="Vertical">
											<TextBlock
												x:Name="CurrentVideoPosition"
												FontSize="20"
												converters:BackgroundThemeConverter.TextMapper="TextBlock"
												HorizontalAlignment="Right"
												VerticalAlignment="Bottom">
												<Run Text="{Binding DisplayPosition}"></Run>
												<Run Text="{Binding DisplayPositionPercent}"></Run>
											</TextBlock>
											<TextBlock
												x:Name="CurrentVideoDuration"
												FontSize="20"
												converters:BackgroundThemeConverter.TextMapper="TextBlock"
												VerticalAlignment="Bottom"
												HorizontalAlignment="Right"
												Text="{Binding DisplayDuration}"
											/>
										</StackPanel>
									</Grid>
									<Image
										x:Name="PosterImage"
										Margin="3 3 1 3"
										Tag="{Binding SelectedRelease.Id}"
										converters:CacheImageConverter.ImageGroup="Poster"
										converters:CacheImageConverter.ImagePath="{Binding SelectedRelease.Poster}"
										Stretch="Uniform"
										Height="200"
									/>
								</StackPanel>
							</Grid>
						</Border>
					</StackPanel>
				</Grid>
			</Grid>
		</Grid>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="ExtraWide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1800" MinWindowHeight="1200" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CurrentReleaseTitle.FontSize" Value="20" />
						<Setter Target="CurrentVideoTitle.FontSize" Value="20" />
						<Setter Target="CurrentVideoPosition.FontSize" Value="20" />
						<Setter Target="CurrentVideoDuration.FontSize" Value="20" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Wide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1400" MinWindowHeight="720" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CurrentReleaseTitle.FontSize" Value="16" />
						<Setter Target="CurrentVideoTitle.FontSize" Value="16" />
						<Setter Target="CurrentVideoPosition.FontSize" Value="16" />
						<Setter Target="CurrentVideoDuration.FontSize" Value="16" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Square">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="720" MinWindowHeight="440" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CurrentReleaseTitle.FontSize" Value="14" />
						<Setter Target="CurrentVideoTitle.FontSize" Value="14" />
						<Setter Target="CurrentVideoPosition.FontSize" Value="14" />
						<Setter Target="CurrentVideoDuration.FontSize" Value="14" />
						<Setter Target="PosterImage.Height" Value="160" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Snapped">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0" MinWindowHeight="0"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CurrentReleaseTitle.FontSize" Value="12" />
						<Setter Target="CurrentVideoTitle.FontSize" Value="12" />
						<Setter Target="CurrentVideoPosition.FontSize" Value="12" />
						<Setter Target="CurrentVideoDuration.FontSize" Value="12" />
						<Setter Target="PosterImage.Height" Value="140" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</Page>
